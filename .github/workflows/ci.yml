name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Build apps
        shell: bash
        env:
          APPS: |
            [
              {"url": "https://grok.com/chat", "name": "xai"},
              {"url": "https://www.douyu.com/directory/myFollow", "name": "douyu"},
              {"url": "https://mail.google.com/mail/u/0/#inbox", "name": "gmail"}
            ]
        run: |
          npm install -g nativefier
          ELECTRON_VERSION="30.0.0"
          echo "Using Electron version: $ELECTRON_VERSION"
          touch zip_files.txt
          # 创建新的 inject.js 文件
          cat << 'EOF' > inject.js
          const { app } = require('electron');
          window.addEventListener('DOMContentLoaded', () => {
            const electronVersion = process.versions.electron;
            const originalTitle = document.title;
            document.title = `${originalTitle} - Electron v${electronVersion}`;
          });
          EOF
          echo "$APPS" | jq -r '.[] | [.url, .name] | join(" ")' | while read url name; do
            echo "Building $name for Linux x64..."
            nativefier "$url" \
              --name "$name" \
              --electron-version "$ELECTRON_VERSION" \
              --platform linux \
              --arch x64 \
              --portable \
              --proxy-rules "http://192.168.1.1:8118" \
              --internal-urls "^_$" \
              --inject inject.js \
              --verbose # 添加详细日志以调试
            zip -r "${name}_linux_x64.zip" *linux-x64
            echo "${name}_linux_x64.zip" >> zip_files.txt
            rm -rf *linux-x64/
          done
          echo "ZIP_FILES<<EOF" >> $GITHUB_ENV
          cat zip_files.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: ${{ env.ZIP_FILES }}
